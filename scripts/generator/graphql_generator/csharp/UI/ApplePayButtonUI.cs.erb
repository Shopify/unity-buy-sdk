namespace <%= namespace %>.UI {
    using UnityEngine;
    using UnityEngine.UI;

    using System.Runtime.InteropServices;
    using System.Text;

    public enum ApplePayButtonStyle {
        plain
    }

    public enum ApplePayButtonType {
        pay
    }

    public class ApplePayButtonUI : MonoBehaviour {
        public ApplePayButtonStyle buttonStyle;

        public ApplePayButtonType buttonType;

        [DllImport ("__Internal")]
        private static extern string _GenerateApplePayButtonImage(string type, string style, float width, float height);

        private Image buttonImage;

        public void Start() {
            buttonImage = this.gameObject.GetComponent<Image>();

            var rectTransform = this.gameObject.GetComponent<RectTransform>();
            UpdateImage(rectTransform);
        }

        public void UpdateImage(RectTransform transform) {
            // Ask iOS to generate us an image of the native Apple Pay button.
            var base64ImageString = _GenerateApplePayButtonImage(
                buttonType.ToString(), 
                buttonStyle.ToString(), 
                transform.rect.width, 
                transform.rect.height
            );

            byte[] imageBytes = System.Convert.FromBase64String(base64ImageString);

            // Create a Texture2D object from the raw byte data from iOS
            var imageTexture = new Texture2D((int)transform.rect.width, (int)transform.rect.height, TextureFormat.RGBA32, false);
            imageTexture.LoadRawTextureData(imageBytes);
            imageTexture.Apply();

            // Create Sprite and assign to the image component.
            buttonImage.sprite = Sprite.Create(
                imageTexture, 
                new Rect(0, 0, imageTexture.width, imageTexture.height), 
                new Vector2(0.5f, 0.5f), 
                100.0f
            );
        }
    }
}
