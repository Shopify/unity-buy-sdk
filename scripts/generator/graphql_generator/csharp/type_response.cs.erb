namespace <%= namespace %> {
    using System;
    using System.Collections.Generic;

    public class <%= type.classify_name %> : AbstractResponse {
        <%# output getters for fields %>
        <% type.fields.each do |field| %>
            public <%= graph_type_to_csharp_type(field.type) %> <%= escape_reserved_word(field.name) %> {
                get {
                    if (Data.ContainsKey("<%= field.name %>")) {
                        return (<%= graph_type_to_csharp_type(field.type) %>) Data["<%= field.name %>"];
                    } else {
                        throw new NoQueryException("<%= field.name %>");
                    }
                }
            }
        <% end %>
        
        <% type.fields.each do |field| %>
            private <%= graph_type_to_csharp_type(field.type) %> _<%= escape_reserved_word(field.name) %>;
        <% end %>

        <%# Constructor %>
        public <%= type.classify_name %>(Dictionary<string, object> dataJSON) {
            Data = new Dictionary<string,object>();
            
            <%= response_inits type %>
        }
    }
}
