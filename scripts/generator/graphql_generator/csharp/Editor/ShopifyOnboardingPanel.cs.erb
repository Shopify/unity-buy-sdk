# if UNITY_EDITOR
namespace <%= namespace %>.SDK {
    using System.Linq;
    using UnityEditor;
    using UnityEngine;

    public class ShopifyOnboardingPanel : EditorWindow {
        private const string HasSeenOnboardingPanelEditorPrefsKey = "shopify_unity_buy_has_seen_onboarding";

        [InitializeOnLoadMethod]
        public static void OnLoad() {
            if (HasSeenPopup()) return;
            ShowWindow();
        }

        [MenuItem("Shopify/Help")]
        public static void ShowWindow() {
            var window = EditorWindow.GetWindow<ShopifyOnboardingPanel>();
            window.ShowPopup();

            EditorPrefs.SetBool(HasSeenOnboardingPanelEditorPrefsKey, true);
        }

        private static bool HasSeenPopup() {
            return EditorPrefs.GetBool(HasSeenOnboardingPanelEditorPrefsKey, false);
        }

        private const string SettingsFileName = "Shopify Buy Visual GUI Settings";

        private ShopifyEditorStyleHelper Styles;

        private const float DesiredWindowWidth = 400f;
        private const float DesiredWindowHeight = 600f;
        private const float Margin = 20f;
        private const float AccentBarHeight = 5f;

        private void OnEnable() {
            titleContent = new GUIContent("Unity Buy SDK");
            position = new Rect(position.xMin, position.yMin, DesiredWindowWidth, DesiredWindowHeight);
            Styles = new ShopifyEditorStyleHelper();
        }

        private void OnGUI() {
            DrawRect(new Rect(0, 0, position.width, position.height), Styles.BackgroundColor);
            DrawRect(new Rect(0, 0, position.width, 5f), Styles.AccentColor);

            GUI.Label(
                BottomRightAnchoredRect(Styles.BackgroundIllustration.width, Styles.BackgroundIllustration.height),
                Styles.BackgroundIllustration
            );

            GUILayout.BeginArea(
                new Rect(
                    Margin,
                    Margin + AccentBarHeight,
                    Mathf.Min(position.width - Margin * 2, DesiredWindowWidth),
                    position.height - (Margin * 2) - AccentBarHeight
                )
            );

            GUILayout.Label(Styles.LogoImage, GUILayout.Height(Styles.LogoImage.height));
            GUILayout.Label("Unity Buy SDK", Styles.HeadingStyle);

            GUILayout.Label(
                "Reward your most dedicated fans with physical merchandise. Shopify Buy SDK enables players to order merchandise directly from your game experience.",
                Styles.BodyStyle
            );

            GUILayout.Label("Start your store today", Styles.SubheadingStyle);

            GUILayout.Label(
                "To use the Shopify Buy SDK you’ll need to set up a Shopify store.",
                Styles.BodyStyle
            );

            if (GUILayout.Button("Start your free trial", Styles.ButtonStyle))
            Application.OpenURL("https://www.shopify.ca/signup");

            GUILayout.Label("Learn how to connect your game to your Shopify store", Styles.SubheadingStyle);

            GUILayout.Label(
                "Read the step-by-step instructions on how to get up and running.",
                Styles.BodyStyle
            );

            if (GUILayout.Button("Read the help documentation", Styles.ButtonStyle))
            Application.OpenURL("https://help.shopify.com/api/sdks/custom-storefront/unity-buy-sdk/getting-started");

            GUILayout.EndArea();
        }

        private void DrawRect(Rect rect, Color color) {
            var colorTex = new Texture2D(1, 1);
            colorTex.SetPixel(0, 0, color);
            colorTex.Apply();

            var style = new GUIStyle();
            style.normal.background = colorTex;

            GUI.Label(rect, "", style);
        }

        private Rect BottomRightAnchoredRect(float width, float height) {
            return new Rect(
                position.width - width,
                position.height - height,
                width,
                height
            );
        }
    }
}
# endif