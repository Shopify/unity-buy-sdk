namespace <%= namespace %>.SDK {
    using System;
    using System.Collections.Generic;

    public class TopLevelResponse {
        private const string KEY_DATA = "data";
        private const string KEY_ERRORS = "errors";

        public string httpError {
            get {
                return _httpError;
            }
        }

        public Dictionary<string,object> DataJSON {
            get {
                return _DataJSON;
            }
        }

        public List<string> errors {
            get {
                return _errors;
            }
        }

        private string _httpError;
        private Dictionary<string,object> _DataJSON;
        private List<string> _errors;

        public TopLevelResponse(Dictionary<string,object> dataJSON) {
            object errors;
            object data;

            _httpError = null;

            dataJSON.TryGetValue(KEY_ERRORS, out errors);
            dataJSON.TryGetValue(KEY_DATA, out data);

            if (errors == null && data == null) {
                throw new InvalidServerResponseException(String.Format("Response JSON did not contain `{0}`` or `{1}`", KEY_DATA, KEY_ERRORS));
            }

            if (errors != null) {
                _errors = ParseErrors((Dictionary<string,object>) dataJSON);
            }

            if (data != null) {
                _DataJSON = (Dictionary<string,object>) data;
            }  
        }

        public TopLevelResponse(string httpError) {
            _httpError = httpError;
            _DataJSON = null;
            _errors = null;
        }

        private List<string> ParseErrors(Dictionary<string,object> dataJSON) {
            List<string> errors = new List<string>();

            if (dataJSON[KEY_ERRORS] is List<object>) {
                List<object> errorsJSON = (List<object>) dataJSON[KEY_ERRORS];

                foreach(Dictionary<string,object> error in errorsJSON) {
                    errors.Add((string) error["message"]);
                }
            } else {
                throw new InvalidServerResponseException(String.Format("Response JSON at `{0}` did not contain an Array of Object's", KEY_ERRORS));
            }

            return errors;
        }
    }
}
