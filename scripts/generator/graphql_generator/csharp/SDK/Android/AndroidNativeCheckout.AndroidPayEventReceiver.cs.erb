#if UNITY_ANDROID
namespace <%= namespace %>.SDK.Android {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using <%= namespace %>.SDK;
    using <%= namespace %>.MiniJSON;

    #if !SHOPIFY_MONO_UNIT_TEST
    using UnityEngine;
    #endif

    public partial class AndroidNativeCheckout : IAndroidPayEventReceiver {
        public void OnUpdateShippingAddress(string serializedMessage) {
            var message = NativeMessage.CreateFromJSON(serializedMessage);
            var contentDictionary = (Dictionary<string, object>) Json.Deserialize(message.Content);
            var mailingAddressInput = new MailingAddressInput(contentDictionary);

            CartState.SetShippingAddress(mailingAddressInput, (ShopifyError error) => {
                if (error == null) {
                    RespondToUpdateAddressSuccessForMessage(message);
                } else {
                    // TODO
                }
            });
        }

        public void OnUpdateShippingLine(string serializedMessage) {
            var message = NativeMessage.CreateFromJSON(serializedMessage);
            var contentDictionary = (Dictionary<string, object>) Json.Deserialize(message.Content);
            var shippingMethod = ShippingMethod.CreateFromJson(contentDictionary);
            UpdateShippingLine(shippingMethod, message);
        }

        public void OnError(string serializedMessage) {
        }

        public void OnCancel(string serializedMessage) {
        }

        private void RespondToUpdateAddressSuccessForMessage(NativeMessage message) {
            var shippingMethods = GetShippingMethods();

            if (shippingMethods.Count > 0) {
                // Set the first shipping method as the default
                UpdateShippingLine(shippingMethods[0], message);
            } else {
                // TODO
            }
        }

        private void UpdateShippingLine(ShippingMethod shippingMethod, NativeMessage message) {
            CartState.SetShippingLine(shippingMethod.Identifier, (ShopifyError error) => {
                    if (error == null) {
                        message.Respond(GetAndroidPayEventResponse().ToJsonString());
                    } else {
                        // TODO
                    }
                });
        }
    }
}
#endif
