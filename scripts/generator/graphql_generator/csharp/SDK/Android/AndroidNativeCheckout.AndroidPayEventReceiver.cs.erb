#if UNITY_ANDROID
namespace <%= namespace %>.SDK.Android {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using <%= namespace %>.SDK;
    using <%= namespace %>.MiniJSON;

    #if !SHOPIFY_MONO_UNIT_TEST
    using UnityEngine;
    #endif

    public partial class AndroidNativeCheckout : IAndroidPayEventReceiver {
        public void OnUpdateShippingAddress(string serializedMessage) {
            var message = NativeMessage.CreateFromJSON(serializedMessage);
            var contentDictionary = (Dictionary<string, object>) Json.Deserialize(message.Content);
            var mailingAddressInput = new MailingAddressInput(contentDictionary);

            CartState.SetShippingAddress(mailingAddressInput, (ShopifyError error) => {
                if (error == null) {
                    message.Respond(GetAndroidPayEventResponse().ToJsonString());
                } else {
                    RespondToUpdateAddressErrorForMessage(message, error);
                }
            });
        }

        public void OnUpdateShippingLine(string serializedMessage) {
        }

        public void OnError(string serializedMessage) {
        }

        public void OnCancel(string serializedMessage) {
        }

        private void RespondToUpdateAddressSuccessForMessage(NativeMessage message) {
            message.Respond("Success test");
        }

        private void RespondToUpdateAddressErrorForMessage(NativeMessage message, ShopifyError error) {
            message.Respond("Error test");
        }
    }
}
#endif
