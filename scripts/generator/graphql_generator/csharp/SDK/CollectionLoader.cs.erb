namespace <%= namespace %>.SDK {
    using System.Collections.Generic;

    public class CollectionLoader {
        public delegate <%= schema.query_root_name %>Query QueryBuilderHandler();
        public delegate bool QueryResponseHandler(QueryResponse response);
        public delegate QueryResponse QueryResponseMergeHandler(List<QueryResponse> responses);
        private delegate void QueryLoop(QueryLoop loop);

        private QueryLoader Loader;

        public CollectionLoader(QueryLoader loader) {
            Loader = loader;
        }

        public void Query(QueryBuilderHandler getQuery, QueryResponseHandler getShouldQuery, QueryResponseMergeHandler getMerged, QueryResponseDelegate callback) {
            List<QueryResponse> responses = new List<QueryResponse>();

            QueryLoop queryLoop = (loop) => {
                <%= schema.query_root_name %>Query query = getQuery();

                Loader.Query(query, (response) => {
                    bool shouldQuery = getShouldQuery(response);

                    responses.Add(response);

                    if (shouldQuery) {
                        loop(loop);
                    } else {
                        callback(getMerged(responses));
                    }
                });
            };

            queryLoop(queryLoop);
        }
    }
}
