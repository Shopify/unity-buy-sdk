apply plugin: 'com.android.library'
apply plugin: 'checkstyle'

checkstyle {
    toolVersion = "7.5.1" // http://checkstyle.sourceforge.net/releasenotes.html
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':unity_classes')
    compile 'com.android.support:appcompat-v7:26.0.0'
    compile 'com.android.support:customtabs:26.0.0'
    testCompile 'junit:junit:4.12'
}

task copyAARToPlugins {
    copy {
        from('build/outputs/aar') {
            rename "shopify_buy_plugin-release.aar", "shopify_buy_plugin.aar"
            exclude '*-debug.aar'
        }
        into '../../Assets/Plugins/Android'
    }
}

task assembleUnity {
    dependsOn 'assembleRelease', 'copyAARToPlugins'
}

task checkstyle(type: Checkstyle) {
    configFile = new File(rootDir, "checkstyle/config.xml")
    configProperties.checkstyleSuppressionsPath = new File(rootDir, "checkstyle/suppressions.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

afterEvaluate {
    if (project.tasks.findByName('check')) {
        check.dependsOn('checkstyle')
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}


