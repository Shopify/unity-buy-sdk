<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<!--
    A heavily customized checkstyle configuration based on Google coding conventions
    from Google Java Style - https://google.github.io/styleguide/javaguide.html.

    Checkstyle is very configurable. Be sure to read the documentation at
    http://checkstyle.sf.net

    To completely disable a check, just comment it out or delete it from the file.
 -->

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="error"/>
    <module name="SuppressionFilter">
        <property name="file" value="${checkstyleSuppressionsPath}"/>
    </module>
    <module name="SuppressionCommentFilter"/>
    <module name="FileLength"/>
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <!-- Trailing spaces -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>
    <!-- For each spacing -->
    <module name="RegexpSingleline">
        <property name="format" value="^\s*for \(.*?([^ ]:|:[^ ])"/>
        <property name="message" value="Space needed around ':' character."/>
    </module>
    <module name="TreeWalker">
        <module name="FileContentsHolder"/>
        <module name="VisibilityModifier">
            <property name="packageAllowed" value="false"/>
            <property name="protectedAllowed" value="true"/>
            <!-- <property name="ignoreAnnotationCanonicalNames" value="Bind"/> -->
            <!-- <property name="ignoreAnnotationCanonicalNames" value="butterknife.Bind"/> -->
            <property name="publicMemberPattern" value="^.*$"/>
        </module>
        <module name="ArrayTypeStyle"/>
        <module name="MissingSwitchDefault"/>
        <module name="FallThrough"/>
        <module name="UpperEll"/>
        <module name="ModifierOrder"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="OneStatementPerLine"/>
        <module name="OneTopLevelClass"/>
        <module name="NoLineWrap"/>
        <module name="AvoidStarImport"/>
        <module name="OuterTypeFilename"/>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format"
                      value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
        </module>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowIfAllCharactersEscaped" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
        <module name="LineLength">
            <property name="max" value="256"/>
            <property name="ignorePattern"
                      value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        </module>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="NeedBraces"/>
        <module name="LeftCurly">
            <property name="maxLineLength" value="100"/>
        </module>
        <module name="RightCurly"/>
        <module name="RightCurly">
            <property name="option" value="alone"/>
            <property name="tokens"
                      value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
        </module>
        <module name="WhitespaceAround">
            <property name="allowEmptyLambdas" value="true" />
        </module>
        <!-- Space between interface methods -->
        <!-- <module name="EmptyLineSeparator"> -->
        <!-- <property name="allowNoEmptyLineBetweenFields" value="true"/> -->
        <!-- </module> -->
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <!-- lowercase package names -->
        <!-- <module name="PackageName"> -->
        <!-- <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/> -->
        <!-- </module> -->
        <module name="TypeName"/>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
        </module>
        <!-- Single character params -->
        <!-- <module name="ParameterName"> -->
        <!-- <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/> -->
        <!-- </module> -->
        <!-- Single character variables -->
        <!-- <module name="LocalVariableName"> -->
        <!-- <property name="tokens" value="VARIABLE_DEF"/> -->
        <!-- <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/> -->
        <!-- <property name="allowOneCharVarInForLoop" value="true"/> -->
        <!-- </module> -->
        <module name="ClassTypeParameterName">
            <property name="format" value="(^T$)|(^T[A-Z][a-zA-Z0-9]*$)"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <!-- Definition of 'equals' without 'hashCode' -->
        <!--<module name="EqualsHashCode"/>-->
        <module name="NoFinalizer"/>
        <module name="GenericWhitespace"/>
        <!-- Breaks on GID, GraphQL, ShopAPI, etc. if set to less than 3 -->
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false"/>
            <property name="allowedAbbreviationLength" value="3"/>
        </module>
        <module name="CustomImportOrder">
            <property name="specialImportsRegExp" value="^android|^com|^junit|^net|^org"/>
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="customImportOrderRules" value="SPECIAL_IMPORTS###STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE###STATIC"/>
        </module>
        <module name="HideUtilityClassConstructor"/>
        <!--<module name="TodoComment"/>-->
        <module name="MethodParamPad"/>
        <module name="AnnotationLocation">
            <property name="tokens"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="AnnotationLocation">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="NonEmptyAtclauseDescription"/>

        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
            <property name="target"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
        </module>
        <module name="CommentsIndentation"/>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="true"/>
        </module>
        <module name="ParameterNumber">
            <property name="ignoreOverriddenMethods" value="true"/>
        </module>
        <module name="EmptyForIteratorPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="RedundantModifier"/>
        <module name="AvoidNestedBlocks"/>
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="InterfaceIsType"/>

        <module name="RegexpSinglelineJava">
            <property name="format" value="new SimpleDateFormat"/>
            <property name="ignoreCase" value="false"/>
            <property name="message" value="Allocating SimpleDateFormat directly can break UI tests. Use DateFormatFactory.createSimpleDateFormat() instead."/>
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="Calendar.getInstance"/>
            <property name="ignoreCase" value="false"/>
            <property name="message" value="Using Calendar.getInstance() directly can break UI tests. Use SimpleRelativeDateUtil.now() instead."/>
        </module>

        <!-- Errors -->
        <!--
        <module name="Indentation"/>

        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="VariableDeclarationUsageDistance"/>
            <module name="OperatorWrap">
                <property name="option" value="NL"/>
                <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR "/>
            </module>
                    <module name="EmptyCatchBlock">
                <property name="exceptionVariableName" value="expected"/>
            </module>

                <module name="LocalFinalVariableName"/>
        <module name="StaticVariableName"/>
        <module name="ConstantName"/>
        -->

    </module>
</module>
